<<<<<<< HEAD
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp2")
base$ventana <- get_template2(base, title="nombre", title2 = "description", text="wiki", wiki = "wikipedias")
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp2")
View(baseO)
autores <- exhibit(base, name="nombre <img src='bandera.png' width='30' height='20'>", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp2")
autores <- exhibit(base, name=paste0("nombre", "<img src='bandera.png' width='30' height='20'>"), ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp2")
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp2")
View(baseO)
rm(base_separado)
View(obras)
rm(obras)
View(input)
View(baseO)
library(netCoin)
library(wikiTools)
library(tidyverse)
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp2")
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
View(base)
View(base)
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
View(base)
base$wikipedias
sub("es\\.wiki", "es.m.wiki", "https://es.wikipedia.org/wiki/Ignacio_Zuloaga")
base$wikipedias <- sub("es\\.wiki", "es.m.wiki", base$wikipedias)
base$ventana <- get_template2(base, title="nombre", title2 = "description", text="wiki", wiki = "wikipedias")
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
base$wikipedias <- ifelse(base$wikipedias=="NA", NA, base$wikipedias)
base$ventana <- get_template2(base, title="nombre", title2 = "description", text="wiki", wiki = "wikipedias")
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
sites <- data.frame(
url=c("wikipedia.org","wikidata.org","brumario.usal.es","museoreinasofia.es","viaf.org", "bne.es", "isni.org"),
name=c("Wikipedia","Wikidata","USAL","MNCARS","VIAF", "BNE", "ISNI"),
icon=c("https://www.wikipedia.org/static/favicon/wikipedia.ico","https://www.wikidata.org/static/favicon/wikidata.ico",
"https://bibliotecas.usal.es/?q=system/files/imagecache/nodoniv2_thumb/nodoniv2/app.png",
"https://static5.museoreinasofia.es/sites/all/themes/mrs_twitter_bootstrap/images/misc/favicon-32x32.png",
"https://viaf.org/viaf/images/viaf.ico",
"https://datos.bne.es/img/logoBNEpositivo.jpg",
"https://isni.org/images/isni-logo.png")
)
base$ventana <- get_template2(base, title="nombre", title2 = "description", text=paste0("wiki", renderLinks(base$Wiki)))
base$Wiki <- ifelse(base$wikipedias=="NA", NA, base$wikipedias)
base$ventana <- get_template2(base, title="nombre", title2 = "description", text=paste0("wiki", renderLinks(base, "Wiki")))
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
base$ventana <- get_template2(base, title="nombre", title2 = "description", text=paste0("wiki", renderLinks(base, "Wiki", target="mainframe", sites=sites)))
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
base$ventana <- get_template2(base, title="nombre", title2 = "description", text=paste0(base$wiki, renderLinks(base, "Wiki", target="mainframe", sites=sites)))
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
base$ventana[1]
text <- paste0(base$wiki, renderLinks(base, "Wiki", target="mainframe", sites=sites))
text[1]
base$text <- paste0(base$wiki, renderLinks(base, "Wiki", target="mainframe", sites=sites))
base$ventana <- get_template2(base, title="nombre", title2 = "description", text="text")
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
base$text <- ifelse(is.na(base$Wiki), "", paste0(base$wiki, renderLinks(base, "Wiki", target="mainframe", sites=sites)))
base$ventana <- get_template2(base, title="nombre", title2 = "description", text="text")
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
library(netCoin)
library(wikiTools)
library(tidyverse)
View(base)
base <- base %>%
mutate(
description=ifelse(is.na(descripción), description, descripción),
description=paste0(toupper(substr(description, 1, 1)), substr(description, 2, nchar(description))),
image=ifelse(pic=="NA" | pic=="", "imgs/pintor.jpg", paste0("imgs/", entity, ".jpg"))) %>%
select(label, descripción, occupation, wikipedias, wiki, image) %>%
rename(nombre = label, ocupación = occupation) %>%
as.data.frame()
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
base$ventana <- get_template2(base, title="nombre", title2 = "description", text="text")
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
View(base)
base <- base %>%
mutate(
description=ifelse(is.na(descripción), description, descripción),
description=paste0(toupper(substr(description, 1, 1)), substr(description, 2, nchar(description))),
image=ifelse(pic=="NA" | pic=="", "imgs/pintor.jpg", paste0("imgs/", entity, ".jpg"))) %>%
select(label, descripción, occupation, wikipedias, wiki, image) %>%
rename(nombre = label, ocupación = occupation) %>%
as.data.frame()
View(base)
base <- read_excel("prueba.xlsx")
=======
na_obras_VO <- obras_mod %>%
filter(is.na(Nombre_VO))
View(na_obras_VO)
edit(obras_mod)
>>>>>>> f12198994c2d988fed2ae3d956af03d85ab882cb
library(readxl)
library(tidyverse)
View(na_obras_VO)
source("C:/Users/Jose/Desktop/Impresionismo/obras_recodificadas.R", echo=TRUE)
obras_mod <- ifelse(is.na(obras$Nombre_VO), obras$Nombre_esp, obras$Nombre_VO)
obras_mod <- ifelse(is.na(obras$Nombre_esp), obras$Nombre_VO, obras$Nombre_esp)
rm(obras_mod)
obras_mod <- obras %>%
mutate(
fecha_inicio = if_else(str_detect(Fecha, "-"), str_extract(Fecha, "^[0-9]{4}"), NA_character_),
fecha_final = str_extract(Fecha, "[0-9]{4}$")
) %>%
separate(Dimensiones, into = c("Alto", "Ancho"), sep = " x ", convert = TRUE)
obras_mod <- ifelse(is.na(obras$Nombre_VO), obras$Nombre_esp, obras$Nombre_VO)
obras_mod <- ifelse(is.na(obras$Nombre_esp), obras$Nombre_VO, obras$Nombre_esp)
obras_mod <- obras %>%
mutate(
fecha_inicio = if_else(str_detect(Fecha, "-"), str_extract(Fecha, "^[0-9]{4}"), NA_character_),
fecha_final = str_extract(Fecha, "[0-9]{4}$")
) %>%
separate(Dimensiones, into = c("Alto", "Ancho"), sep = " x ", convert = TRUE)
obras_mod$Nombre_VO <- ifelse(is.na(obras$Nombre_VO), obras$Nombre_esp, obras$Nombre_VO)
obras_mod$Nombre_esp <- ifelse(is.na(obras$Nombre_esp), obras$Nombre_VO, obras$Nombre_esp)
na_obras_VO <- obras_mod %>%
filter(is.na(Nombre_VO))
View(na_obras_VO)
View(obras_mod)
na_obras_VO <- obras_mod %>%
filter(anyDuplicated(Nombre_VO))
duplicados <- anyDuplicated(obras_mod$Nombre_VO)
duplicados
duplicados <- obras_mod %>%
mutate(Es_duplicado = Nombre_obra %in% Nombre_obra[duplicated(Nombre_obra)])
duplicados <- obras_mod %>%
mutate(Es_duplicado = Nombre_VO %in% Nombre_obra[duplicated(Nombre_obra)])
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(duplicados)
duplicados <- obras_mod %>%
add_count(Nombres_VO) %>%  # Agrega una columna con el número de repeticiones de cada Nombres_VO
mutate(
Nombres_VO = ifelse(n > 1, paste0(Nombres_VO, " (", fecha_final, ")"), Nombres_VO)  # Modifica solo los duplicados
) %>%
select(-n)  # Opcional: elimina la columna de conteo si no la necesitas
View(obras_mod)
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Agrega una columna con el número de repeticiones de cada Nombres_VO
mutate(
Nombres_VO = ifelse(n > 1, paste0(Nombres_VO, " (", fecha_final, ")"), Nombres_VO)  # Modifica solo los duplicados
) %>%
select(-n)  # Opcional: elimina la columna de conteo si no la necesitas
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Agrega una columna con el número de repeticiones de cada Nombres_VO
mutate(
Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO)  # Modifica solo los duplicados
) %>%
select(-n)  # Opcional: elimina la columna de conteo si no la necesitas
View(duplicados)
dupli_comprobar <- duplicados %>%
add_count(Nombre_VO) %>%  # Cuenta las repeticiones de cada Nombre_obra
filter(n > 1) %>%           # Filtra solo los que aparecen más de una vez
select(-n)
View(dupli_comprobar)
letras <- function(n) letters[seq_len(n)]
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombres_VO
group_by(Nombre_VO) %>%   # Agrupa por la variable duplicada
mutate(
letra = ifelse(n > 2, get_letters(n)[row_number()], ""),  # Asigna letras si hay más de 2 duplicados
Nombres_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, letra, ")"), Nombre_VO)  # Modifica solo duplicados
) %>%
ungroup() %>%
select(-n, -letra)  # Opcional: eliminar columnas auxiliares
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombres_VO
group_by(Nombre_VO) %>%   # Agrupa por la variable duplicada
mutate(
letra = ifelse(n > 2, letras(n)[row_number()], ""),  # Asigna letras si hay más de 2 duplicados
Nombres_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, letra, ")"), Nombre_VO)  # Modifica solo duplicados
) %>%
ungroup() %>%
select(-n, -letra)  # Opcional: eliminar columnas auxiliares
letras <- function(n) letters[seq_len(n)]
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombres_VO
group_by(Nombre_VO) %>%   # Agrupa por la variable duplicada
mutate(
letra = ifelse(n > 2, letras(n)[row_number()], ""),  # Asigna letras si hay más de 2 duplicados
Nombres_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, letra, ")"), Nombre_VO)  # Modifica solo duplicados
) %>%
ungroup() %>%
select(-n, -letra)  # Opcional: eliminar columnas auxiliares
dplyr::last_dplyr_warnings()
letras <- function(n) letters[seq_len(n)]
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombres_VO
group_by(Nombre_VO) %>%   # Agrupa por la variable duplicada
mutate(
letra = ifelse(n > 2, letras(n)[row_number()], ""),  # Asigna letras si hay más de 2 duplicados
Nombres_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, letra, ")"), Nombre_VO)  # Modifica solo duplicados
) %>%
ungroup() %>%
select(-n, -letra)  # Opcional: eliminar columnas auxiliares
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombres_VO
group_by(Nombre_VO) %>%   # Agrupa por la variable duplicada
mutate(
letra = ifelse(n > 2, letters(n)[row_number()], ""),  # Asigna letras si hay más de 2 duplicados
Nombres_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, letra, ")"), Nombre_VO)  # Modifica solo duplicados
) %>%
ungroup() %>%
select(-n, -letra)  # Opcional: eliminar columnas auxiliares
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%   # Agrupa por la variable duplicada
mutate(
letra = ifelse(n > 2, letters[row_number()], ""),  # Usa 'letters' correctamente
Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, letra, ")"), Nombre_VO)  # Modifica solo duplicados
) %>%
ungroup() %>%
select(-n, -letra)  # Elimina las columnas auxiliares
dupli_comprobar <- duplicados %>%
add_count(Nombre_VO) %>%  # Cuenta las repeticiones de cada Nombre_obra
filter(n > 1) %>%           # Filtra solo los que aparecen más de una vez
select(-n)
View(dupli_comprobar)
letras
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%   # Agrupa por la variable duplicada
mutate(
letra = ifelse(n > 2, letters[row_number()], ""),  # Usa 'letters' correctamente
Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, letra, ")"), Nombre_VO)  # Modifica solo duplicados
) %>%
ungroup() %>%
select(-n, -letra)  # Elimina las columnas auxiliares
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%   # Agrupa por la variable duplicada
mutate(
letra = ifelse(n > 2, letters[seq_len(n)][row_number()], ""),  # Asigna letras solo si hay más de 2 duplicados
Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, letra, ")"), Nombre_VO)  # Modifica solo duplicados
) %>%
ungroup() %>%
select(-n)  # Elimina la columna auxiliar de conteo
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%   # Agrupa por la variable duplicada
mutate(
letra = ifelse(n > 2, letters[seq_len(n)][row_number()], ""),  # Asigna letras solo si hay más de 2 duplicados
Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, letra, ")"), Nombre_VO)  # Modifica solo duplicados
) %>%
ungroup() %>%
select(-n)  # Elimina la columna auxiliar de conteo
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombre_VO
mutate(
Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO)  # Modifica solo duplicados
)
View(duplicados)
dupli_comprobar <- duplicados %>%
add_count(Nombre_VO) %>%  # Cuenta las repeticiones de cada Nombre_obra
filter(n > 1) %>%           # Filtra solo los que aparecen más de una vez
select(-n)
View(dupli_comprobar)
letras <- function(n) letters[seq_len(n)]
duplicados <- duplicados %>%
add_count(Nombre_VO) %>%
mutate(ifelse(n>1, paste0(Nombre_VO, letras)))
duplicados <- duplicados %>%
add_count(Nombre_VO) %>%
mutate(Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, letras(n)), Nombre_VO))
library(purrr)
duplicados <- duplicados %>%
add_count(Nombre_VO) %>%
mutate(Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, letras(n)), Nombre_VO))
duplicados <- duplicados %>%
add_count(Nombre_VO, name = "n") %>%  # Ensure 'n' column is properly named
mutate(Nombre_VO = if_else(n > 1, paste0(Nombre_VO, map_chr(n, letras)), Nombre_VO))
duplicados <- duplicados %>%
add_count(Nombre_VO) %>%
mutate(Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, letras(n)), Nombre_VO))
View(duplicados)
dupli_comprobar <- duplicados %>%
add_count(Nombre_VO) %>%  # Cuenta las repeticiones de cada Nombre_obra
filter(n > 1) %>%           # Filtra solo los que aparecen más de una vez
select(-n)
View(dupli_comprobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombre_VO
mutate(
Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO)  # Modifica solo duplicados
)
dupli_comprobar <- duplicados %>%
add_count(Nombre_VO) %>%  # Cuenta las repeticiones de cada Nombre_obra
filter(n > 1) %>%           # Filtra solo los que aparecen más de una vez
select(-n)
duplicados <- duplicados %>%
add_count(Nombre_VO) %>%
mutate(Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, letras(n)), Nombre_VO))
dupli_comprobar <- duplicados %>%
add_count(Nombre_VO) %>%  # Cuenta las repeticiones de cada Nombre_obra
filter(n > 1) %>%           # Filtra solo los que aparecen más de una vez
select(-n)
duplicados <- duplicados %>%
add_count(Nombre_VO, name = "n") %>%  # Count duplicates
group_by(Nombre_VO) %>%  # Group duplicates
mutate(suffix = if_else(n > 1, letters[row_number()], ""),  # Assign letters a, b, c, etc.
Nombre_VO = paste0(Nombre_VO, suffix)) %>%
ungroup() %>%
select(-suffix, -n)
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombre_VO
mutate(
Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO)  # Modifica solo duplicados
)
duplicados <- duplicados %>%
add_count(Nombre_VO, name = "n") %>%  # Count duplicates
group_by(Nombre_VO) %>%  # Group duplicates
mutate(suffix = if_else(n > 1, letters[row_number()], ""),  # Assign letters a, b, c, etc.
Nombre_VO = paste0(Nombre_VO, suffix)) %>%
ungroup() %>%
select(-suffix, -n)
View(dupli_comprobar)
dupli_comprobar <- duplicados %>%
add_count(Nombre_VO) %>%  # Cuenta las repeticiones de cada Nombre_obra
filter(n > 1) %>%           # Filtra solo los que aparecen más de una vez
select(-n)
View(dupli_comprobar)
View(duplicados)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar una vez y nombrarlo "n"
mutate(
<<<<<<< HEAD
description=ifelse(is.na(descripción), description, descripción),
description=paste0(toupper(substr(description, 1, 1)), substr(description, 2, nchar(description))),
image=ifelse(pic=="NA" | pic=="", "imgs/pintor.jpg", paste0("imgs/", entity, ".jpg"))) %>%
select(label, descripción, description, occupation, wikipedias, wiki, image) %>%
rename(nombre = label, ocupación = occupation) %>%
as.data.frame()
base$description <- gsub("\\s*\\(.*?\\)", "", base$description)
base$wikipedias <- sub("es\\.wiki", "es.m.wiki", base$wikipedias)
base$Wiki <- ifelse(base$wikipedias=="NA", NA, base$wikipedias)
base$text <- ifelse(is.na(base$Wiki), "", paste0(base$wiki, renderLinks(base, "Wiki", target="mainframe", sites=sites)))
base$ventana <- get_template2(base, title="nombre", title2 = "description", text="text")
#Recodificación de ocupaciones
M <- base
p <- as.data.frame(read_excel("OcupacionesI.xlsx", sheet="Ocupaciones"))
p <- p[!is.na(p$categoría),] # Evita NA
cates <- names(table(p$categoría))
changes <-list()
M$Ocupación <- tolower(M$occupation)
M$Ocupación <- tolower(M$ocupación)
for(i in cates[c(3, 2, 4, 6, 5, 1, 8, 7)]){
changes[[i]]  <- p[p$categoría==i, "ocupación"]
for(j in 1:nrow(M)) {
x <- unlist(strsplit(M$Ocupación[j],"\\|"))
if(length(intersect(x, changes[[i]]))>0) M$disc[j] <- paste0(M$disc[j], "|", i)
}
}
M$disciplina <- sub("^\\|","", M$disc)
if(exists("base")) base$Disciplina <- M$disciplina
View(base)
if(length(intersect(x, changes[[i]])) > 0 && !grepl(paste0("\\b", i, "\\b"), M$disc[j])) {
M$disc[j] <- paste0(M$disc[j], "|", i)
}
base$disciplina
base$Discisciplina
View(base)
View(base)
view(p)
table(p$occupation)
table(p$ocupación)
table(p$ocupación) > 1
duplicadas <- names(table(p$ocupación))[table(p$ocupación) > 1]
print(duplicadas)
M <- base
p <- as.data.frame(read_excel("OcupacionesI.xlsx", sheet="Ocupaciones"))
p <- p[!is.na(p$categoría),] # Evita NA
cates <- names(table(p$categoría))
changes <-list()
M$Ocupación <- tolower(M$ocupación)
for(i in cates[c(3, 2, 4, 6, 5, 1, 8, 7)]){
changes[[i]]  <- p[p$categoría==i, "ocupación"]
for(j in 1:nrow(M)) {
x <- unlist(strsplit(M$Ocupación[j],"\\|"))
if(length(intersect(x, changes[[i]]))>0) M$disc[j] <- paste0(M$disc[j], "|", i)
}
}
M$disciplina <- sub("^\\|","", M$disc)
if(exists("base")) base$Disciplina <- M$disciplina
duplicadas <- names(table(p$ocupación))[table(p$ocupación) > 1]
print(duplicadas)
head(base$ocupación)
head(M$ocupación)
head(p$ocupación)
View(base)
M <- base
p <- as.data.frame(read_excel("OcupacionesI.xlsx", sheet="Ocupaciones"))
p <- p[!is.na(p$categoría),] # Evita NA
cates <- names(table(p$categoría))
changes <-list()
M$Ocupación <- tolower(M$ocupación)
for(i in cates[c(3, 2, 4, 6, 5, 1, 8, 7)]){
changes[[i]]  <- p[p$categoría==i, "ocupación"]
for(j in 1:nrow(M)) {
x <- unlist(strsplit(M$Ocupación[j],"\\|"))
if(length(intersect(x, changes[[i]]))>0) M$disc[j] <- paste0(M$disc[j], "|", i)
}
}
M$disciplina <- sub("^\\|","", M$disc)
if(exists("base")) base$Disciplina <- M$disciplina
View(M)
duplicadas <- names(table(p$categoría))[table(p$categoría) > 1]
print(duplicadas)
duplicadas <- names(table(p$ocupación))[table(p$ocupación) > 1]
print(duplicadas)
View(base)
View(p)
head(M$Ocupación)
head(x)
x
M <- base
p <- as.data.frame(read_excel("OcupacionesI.xlsx", sheet="Ocupaciones"))
p <- p[!is.na(p$categoría),] # Evita NA
cates <- names(table(p$categoría))
changes <-list()
M$Ocupación <- tolower(M$ocupación)
for(i in cates[c(3, 2, 4, 6, 5, 1, 8, 7)]){
changes[[i]]  <- p[p$categoría==i, "ocupación"]
for(j in 1:nrow(M)) {
x <- unlist(strsplit(M$Ocupación[j],"\\|"))
if(length(intersect(x, changes[[i]]))>0) M$disc[j] <- paste0(M$disc[j], "|", i)
}
}
M$disciplina <- sub("^\\|","", M$disc)
if(exists("base")) base$Disciplina <- M$disciplina
View(base)
cates
View(changes)
M <- base
p <- as.data.frame(read_excel("OcupacionesI.xlsx", sheet="Ocupaciones"))
p <- p[!is.na(p$categoría),] # Evita NA
cates <- names(table(p$categoría))
changes <-list()
M$Ocupación <- tolower(M$ocupación)
M$disc <- ""
for(i in cates[c(3, 2, 4, 6, 5, 1, 8, 7)]){
changes[[i]]  <- p[p$categoría==i, "ocupación"]
for(j in 1:nrow(M)) {
x <- unlist(strsplit(M$Ocupación[j],"\\|"))
if(length(intersect(x, changes[[i]]))>0) M$disc[j] <- paste0(M$disc[j], "|", i)
}
}
M$disciplina <- sub("^\\|","", M$disc)
if(exists("base")) base$Disciplina <- M$disciplina
rm(duplicadas)
View(base)
base$ventana <- get_template2(base, title="nombre", title2 = "description", text="text")
autores <- exhibit(base, name="nombre", ntext="ventana", image="image", main = "Autores del impresionismo",
language = "es") %>% plot(dir="~/temp")
View(baseO)
git status
system("git commit -m 'Ignorar .Rhistory'")
system("git pull --rebase")
library(readxl)
library(tidyverse)
obras_mod <- (obras.xlsx)
obras_mod <- data(obras.xlsx)
obras_mod <- data(obras)
obras_mod <- read_excel("obras.xlsx")
obras <- read_excel("obras.xlsx")
obras_mod <- obras %>%
mutate(
fecha_inicio = if_else(str_detect(fecha, "-"), str_extract(fecha, "^[0-9]{4}"), NA_character_),  # Solo extrae si hay guion
fecha_final = str_extract(fecha, "[0-9]{4}$")  # Siempre extrae el último año (sea único o con guion)
)
View(obras)
obras_mod <- obras %>%
mutate(
fecha_inicio = if_else(str_detect(Fecha, "-"), str_extract(Fecha, "^[0-9]{4}"), NA_character_),  # Solo extrae si hay guion
fecha_final = str_extract(Fecha, "[0-9]{4}$")  # Siempre extrae el último año (sea único o con guion)
)
View(obras_mod)
?str_extract
obras_mod <- obras %>%
mutate(
fecha_inicio = if_else(str_detect(Fecha, "-"), str_extract(Fecha, "^[0-9]{4}"), NA_character_),  # Solo extrae si hay guion
fecha_final = str_extract(Fecha, "[0-9]{4}$")  # Siempre extrae el último año (sea único o con guion)
) %>%
separate(Dimensiones, into = c("Alto", "Ancho"), sep = " x ", convert = TRUE)
install.packages("fuzzyjoin")
library(fuzzyjoin)
View(obras)
View(obras_mod)
autores <- read_excel("prueba.xlsx")
View(autores)
union <- obras_mod %>%
left_join(obras, by = "label")
union <- obras_mod %>%
left_join(autores, by = "label")
union <- autores %>%
left_join(obras_mod, by = "label")
?rename
rename(autores, label = Autores)
rename(autores, Autores = label)
View(autores)
autores$label <- rename(autores, Autores = label)
autores <- read_excel("prueba.xlsx")
autores <- rename(autores, Autores = label)
union <- autores %>%
left_join(obras_mod, by = "Autores")
View(autores)
autores <- rename(autores, Autor = label)
autores <- read_excel("prueba.xlsx")
autores <- rename(autores, Autor = label)
union <- autores %>%
left_join(obras_mod, by = "Autor")
View(union)
autores <- read_excel("prueba.xlsx")
autores  <- autores %>%
rename(autores, Autor = label) %>%
select(Autor, entity)
autores  <- autores %>%
rename(autores, Autor = label) %>%
select(c(Autor, entity))
autores  <- autores %>%
rename(autores, Autor = label) %>%
select("Autor", "entity")
autores  <- autores %>%
rename(Autor = label) %>%
select(Autor, entity)
autores <- read_excel("prueba.xlsx")
autores  <- autores %>%
rename(Autor = label) %>%
select(Autor, entity)
View(autores)
autores <- read_excel("prueba.xlsx")
autores  <- autores %>%
rename(Autor = label, Q = entity) %>%
select(Autor, Q)
View(autores)
union <- autores %>%
left_join(obras_mod, by = "Autor")
View(union)
is.na(union$Q)
summary(is.na(union$Q))
coincidencias_raras <- union %>%
filter(is.na(Q))
rm(coincidencias_raras)
View(union)
tabla <- union %>%
group_by(Q) %>%
summarise(Titulos = paste(Nombre_VO, collapse = "|"))
View(tabla)
tabla <- union %>%
group_by(Q) %>%
summarise(Titulos = paste(Nombre_VO, collapse = "|")) %>%
na.omit()
View(tabla)
tabla <- union %>%
group_by(Q) %>%
summarise(Titulos = paste(Nombre_VO, collapse = "|")) %>%
drop_na(Titulos)
View(tabla)
tabla <- union %>%
group_by(Q) %>%
summarise(Titulos = paste(Nombre_VO, collapse = "|")) %>%
filter(!is.na(Titulos))
View(tabla)
is.na(tabla$Titulos)
tabla <- union %>%
group_by(Q) %>%
summarise(Titulos = paste(Nombre_VO, collapse = "|")) %>%
filter(Titulos != "")
View(tabla)
tabla <- union %>%
group_by(Q) %>%
summarise(Titulos = paste(Nombre_VO, collapse = "|")) %>%
mutate(Titulos = na_if(Titulos, "NA")) %>%  # Convierte "NA" en NA real
drop_na(Titulos)
View(tabla)
?devtools
library(devtools)
?devtools
=======
Nombre_VO = if_else(n > 1, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),
suffix = if_else(n > 2, letters[row_number()], ""),
Nombre_VO = paste0(Nombre_VO, suffix)
) %>%
select(-suffix, -n)  # Eliminar columnas auxiliares si no son necesarias
rm(dupli_comprobar)
View(duplicados)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar una vez y nombrarlo "n"
mutate(
Nombre_VO = if_else(n > 1, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),
suffix = if_else(n > 2, letters[row_number()], ""),
Nombre_VO = ifelse(n>2, paste0(Nombre_VO, suffix))
) %>%
select(-suffix, -n)  # Eliminar columnas auxiliares si no son necesarias
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar una vez y nombrarlo "n"
mutate(
Nombre_VO = if_else(n > 1, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),
suffix = if_else(n > 2, letters[row_number()], ""),
Nombre_VO = ifelse(n>2, paste0(Nombre_VO, suffix), Nombre_VO)
) %>%
select(-suffix, -n)  # Eliminar columnas auxiliares si no son necesarias
View(duplicados)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar una vez y nombrarlo "n"
mutate(
Nombre_VO = if_else(n > 1, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),
suffix = if_else(n > 2, letters[row_number()], ""),
Nombre_VO = ifelse(n>2, paste0(Nombre_VO, " (", fecha_final, ")", suffix), Nombre_VO)
) %>%
select(-suffix, -n)  # Eliminar columnas auxiliares si no son necesarias
View(duplicados)
dupli_comrobar <- duplicados %>%
add_count(Nombres_VO) %>%
filter(n>1)
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar una vez y nombrarlo "n"
mutate(
Nombre_VO = if_else(n > 1, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),
suffix = if_else(n > 2, letters[row_number()], ""),
Nombre_VO = ifelse(n>2, paste0(Nombre_VO, suffix), Nombre_VO)
) %>%
select(-suffix, -n)  # Eliminar columnas auxiliares si no son necesarias
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar una vez y nombrarlo "n"
mutate(
Nombre_VO = if_else(n > 1, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),
suffix = if_else(n >= 2, letters[row_number()], ""),
Nombre_VO = ifelse(n >= 2, paste0(Nombre_VO, suffix), Nombre_VO)
) %>%
select(-suffix, -n)  # Eliminar columnas auxiliares si no son necesarias
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n=1)
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n==1)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar una vez y nombrarlo "n"
mutate(
Nombre_VO = if_else(n = 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),
suffix = if_else(n > 2, letters[row_number()], ""),
Nombre_VO = ifelse(n > 2, paste0(Nombre_VO, suffix), Nombre_VO)
) %>%
select(-suffix, -n)  # Eliminar columnas auxiliares si no son necesarias
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar una vez y nombrarlo "n"
mutate(
Nombre_VO = if_else(n == 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),
suffix = if_else(n > 2, letters[row_number()], ""),
Nombre_VO = ifelse(n > 2, paste0(Nombre_VO, suffix), Nombre_VO)
) %>%
select(-suffix, -n)  # Eliminar columnas auxiliares si no son necesarias
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
View(duplicados)
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>2)
View(dupli_comrobar)
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n==0)
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n==1)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%  # Agrupar para poder usar row_number()
mutate(
Nombre_VO = if_else(n >= 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),  # Agregar fecha si hay duplicados
suffix = if_else(n > 2, letters[row_number()], ""),  # Agregar letra si hay más de dos duplicados
Nombre_VO = paste0(Nombre_VO, suffix)  # Concatenar el sufijo final
) %>%
ungroup() %>%  # Salir del agrupamiento
select(-suffix, -n)  # Eliminar columnas auxiliares
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n==1)
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%  # Agrupar para poder usar row_number()
mutate(
Nombre_VO = if_else(n >= 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),  # Agregar fecha si hay duplicados
suffix = if_else(n > 2, letters[row_number()], ""),  # Agregar letra si hay más de dos duplicados
Nombre_VO = paste0(Nombre_VO, suffix)  # Concatenar el sufijo final
) %>%
ungroup() %>%  # Salir del agrupamiento
select(-suffix, -n)  # Eliminar columnas auxiliares
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%  # Agrupar para poder usar row_number()
mutate(
Nombre_VO = if_else(n >= 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),  # Agregar fecha si hay duplicados
suffix = if_else(n >= 2, letters[row_number()], ""),  # Agregar letra si hay más de dos duplicados
Nombre_VO = paste0(Nombre_VO, suffix)  # Concatenar el sufijo final
) %>%
ungroup() %>%  # Salir del agrupamiento
select(-suffix, -n)  # Eliminar columnas auxiliares
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(duplicados)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%  # Agrupar para poder usar row_number()
mutate(
Nombre_VO = if_else(n >= 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),  # Agregar fecha si hay duplicados
suffix = if_else(n > 2, letters[row_number()], ""),  # Agregar letra si hay más de dos duplicados
Nombre_VO = paste0(Nombre_VO, suffix)  # Concatenar el sufijo final
) %>%
ungroup() %>%  # Salir del agrupamiento
select(-suffix, -n)  # Eliminar columnas auxiliares
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%  # Agrupar para poder usar row_number()
mutate(
Nombre_VO = if_else(n == 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),  # Agregar fecha si hay duplicados
suffix = if_else(n > 2, letters[row_number()], ""),  # Agregar letra si hay más de dos duplicados
Nombre_VO = ifelse(n>2,paste0(Nombre_VO, " (", fecha_final, ")", suffix), Nombre_VO, " (", fecha_final, ")")
) %>%
ungroup() %>%  # Salir del agrupamiento
select(-suffix, -n)  # Eliminar columnas auxiliares
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%  # Agrupar para poder usar row_number()
mutate(
Nombre_VO = if_else(n == 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),  # Agregar fecha si hay duplicados
suffix = if_else(n > 2, letters[row_number()], ""),  # Agregar letra si hay más de dos duplicados
Nombre_VO = ifelse(n > 2,paste0(Nombre_VO, " (", fecha_final, ")", suffix), paste0(Nombre_VO, " (", fecha_final, ")")
)) %>%
ungroup() %>%  # Salir del agrupamiento
select(-suffix, -n)  # Eliminar columnas auxiliares
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%  # Agrupar para poder usar row_number()
mutate(
Nombre_VO = if_else(n == 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),  # Agregar fecha si hay duplicados
suffix = if_else(n > 2, letters[row_number()], ""),  # Agregar letra si hay más de dos duplicados
Nombre_VO = ifelse(n > 2,paste0(Nombre_VO, " (", fecha_final, ")", suffix), paste0(Nombre_VO, " (", fecha_final, ")")
)) %>%
ungroup() %>%  # Salir del agrupamiento
select(-suffix, -n)  # Eliminar columnas auxiliares
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%  # Agrupar para poder usar row_number()
mutate(
Nombre_VO = if_else(n == 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),  # Agregar fecha si hay duplicados
suffix = if_else(n > 2, letters[row_number()], ""),  # Agregar letra si hay más de dos duplicados
Nombre_VO = ifelse(n > 2,paste0(Nombre_VO, " (", fecha_final, suffix, ")"), paste0(Nombre_VO, " (", fecha_final, ")")
)) %>%
ungroup() %>%  # Salir del agrupamiento
select(-suffix, -n)  # Eliminar columnas auxiliares
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%  # Agrupar para poder usar row_number()
mutate(
Nombre_VO = if_else(n == 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),  # Agregar fecha si hay duplicados
suffix = if_else(n > 2, letters[row_number()], ""),  # Agregar letra si hay más de dos duplicados
Nombre_VO = ifelse(n > 2,paste0(Nombre_VO, " (", fecha_final, suffix, ")"), Nombre_VO)
) %>%
ungroup() %>%  # Salir del agrupamiento
select(-suffix, -n)  # Eliminar columnas auxiliares
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO, name = "n") %>%  # Contar cuántas veces aparece cada Nombre_VO
group_by(Nombre_VO) %>%  # Agrupar para poder usar row_number()
mutate(
Nombre_VO = if_else(n >= 2, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO),  # Agregar fecha si hay duplicados
suffix = if_else(n > 2, letters[row_number()], ""),  # Agregar letra si hay más de dos duplicados
Nombre_VO = if_else(n > 2, paste0(Nombre_VO, suffix), Nombre_VO)  # Agregar sufijo si hay más de 2 duplicados
) %>%
ungroup() %>%  # Salir del agrupamiento
select(-suffix, -n)  # Eliminar columnas auxiliares
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
View(dupli_comrobar)
duplicados <- obras_mod %>%
add_count(Nombre_VO) %>%  # Cuenta cuántas veces aparece cada Nombre_VO
mutate(
Nombre_VO = ifelse(n > 1, paste0(Nombre_VO, " (", fecha_final, ")"), Nombre_VO)
)
duplicados <- duplicados %>%
add_count(Nombre_VO, name = "n") %>%
group_by(Nombre_VO) %>%
mutate(suffix = if_else(n > 2, letters[row_number()], ""),
Nombre_VO = paste0(Nombre_VO, suffix)) %>%
ungroup()
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
View(dupli_comrobar)
View(dupli_comrobar)
duplicados <- duplicados %>%
add_count(Nombre_VO, name = "n") %>%
group_by(Nombre_VO) %>%
mutate(suffix = if_else(n > 1, letters[row_number()], ""),
Nombre_VO = paste0(Nombre_VO, suffix)) %>%
ungroup()
dupli_comrobar <- duplicados %>%
add_count(Nombre_VO) %>%
filter(n>1)
View(dupli_comrobar)
View(duplicados)
rm(dupli_comrobar)
rm(na_obras_VO)
rm(letras)
>>>>>>> f12198994c2d988fed2ae3d956af03d85ab882cb
